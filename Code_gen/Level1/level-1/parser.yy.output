
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  optional_declaration_list procedure_definition
2: optional_declaration_list ->  <empty>
3: optional_declaration_list ->  variable_declaration_list
4: procedure_definition (NAME) ->  NAME '(' ')' #0001 '{' optional_variable_declaration_list #0002 basic_block_list '}'
5: #0001 ->  <empty>
6: #0002 ->  <empty>
7: optional_variable_declaration_list ->  <empty>
8: optional_variable_declaration_list ->  variable_declaration_list
9: variable_declaration_list ->  variable_declaration
10: variable_declaration_list ->  variable_declaration_list variable_declaration
11: variable_declaration (';') ->  declaration ';'
12: declaration (INTEGER) ->  INTEGER NAME
13: basic_block_list ->  basic_block_list basic_block
14: basic_block_list ->  basic_block
15: basic_block (BBNUM) ->  BBNUM ':' executable_statement_list
16: executable_statement_list ->  assignment_statement_list
17: executable_statement_list (RETURN) ->  assignment_statement_list RETURN ';'
18: executable_statement_list ->  assignment_statement_list goto_statement
19: executable_statement_list ->  assignment_statement_list if_else_statement
20: assignment_statement_list ->  <empty>
21: assignment_statement_list ->  assignment_statement_list assignment_statement
22: atomic_expression ->  variable
23: atomic_expression ->  constant
24: relational_expression ->  atomic_expression
25: relational_expression (GE) ->  relational_expression GE relational_expression
26: relational_expression (LE) ->  relational_expression LE relational_expression
27: relational_expression (LT) ->  relational_expression LT relational_expression
28: relational_expression (GT) ->  relational_expression GT relational_expression
29: relational_expression (EQ) ->  relational_expression EQ relational_expression
30: relational_expression (NE) ->  relational_expression NE relational_expression
31: expression ->  relational_expression
32: if_else_statement (IF) ->  IF '(' expression ')' goto_statement ELSE goto_statement
33: goto_statement (GOTO) ->  GOTO BBNUM ';'
34: assignment_statement (ASSIGN) ->  variable ASSIGN expression ';'
35: variable (NAME) ->  NAME
36: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
37: program_$ ->  program


Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: BBNUM
   259: NAME
   260: RETURN
   261: INTEGER
   262: ASSIGN
   263: IF
   264: ELSE
   265: GOTO
   266: NE
   267: EQ
   268: LT
   269: LE
   270: GT
   271: GE
    40: '('
    41: ')'
   123: '{'
   125: '}'
    59: ';'
    58: ':'


Grammar States: 
State 0:
37: program_$ ->  . program 
  0:   On program to state 1
  1:   On optional_declaration_list to state 2
  2:   On variable_declaration_list to state 3
  3:   On variable_declaration to state 4
  4:   On declaration to state 5
  5:   On INTEGER to state 6
  Reduce by 2: optional_declaration_list ->  . 


State 1:
37: program_$ -> program  . 


State 2:
1: program -> optional_declaration_list  . procedure_definition 
  0:   On procedure_definition to state 7
  1:   On NAME to state 8


State 3:
3: optional_declaration_list -> variable_declaration_list  . 
10: variable_declaration_list -> variable_declaration_list  . variable_declaration 
  0:   On variable_declaration to state 9
  1:   On declaration to state 5
  2:   On INTEGER to state 6
  Reduce by 3: optional_declaration_list -> variable_declaration_list  . 


State 4:
9: variable_declaration_list -> variable_declaration  . 
  Reduce by 9: variable_declaration_list -> variable_declaration  . 


State 5:
11: variable_declaration -> declaration  . ';' 
  0:   On ';' to state 10


State 6:
12: declaration -> INTEGER  . NAME 
  0:   On NAME to state 11


State 7:
1: program -> optional_declaration_list procedure_definition  . 
  Reduce by 1: program -> optional_declaration_list procedure_definition  . 


State 8:
4: procedure_definition -> NAME  . '(' ')' #0001 '{' optional_variable_declaration_list #0002 basic_block_list '}' 
  0:   On '(' to state 12


State 9:
10: variable_declaration_list -> variable_declaration_list variable_declaration  . 
  Reduce by 10: variable_declaration_list -> variable_declaration_list variable_declaration  . 


State 10:
11: variable_declaration -> declaration ';'  . 
  Reduce by 11: variable_declaration -> declaration ';'  . 


State 11:
12: declaration -> INTEGER NAME  . 
  Reduce by 12: declaration -> INTEGER NAME  . 


State 12:
4: procedure_definition -> NAME '('  . ')' #0001 '{' optional_variable_declaration_list #0002 basic_block_list '}' 
  0:   On ')' to state 13


State 13:
4: procedure_definition -> NAME '(' ')'  . #0001 '{' optional_variable_declaration_list #0002 basic_block_list '}' 
  0:   On #0001 to state 14
  Reduce by 5: #0001 ->  . 


State 14:
4: procedure_definition -> NAME '(' ')' #0001  . '{' optional_variable_declaration_list #0002 basic_block_list '}' 
  0:   On '{' to state 15


State 15:
4: procedure_definition -> NAME '(' ')' #0001 '{'  . optional_variable_declaration_list #0002 basic_block_list '}' 
  0:   On optional_variable_declaration_list to state 16
  1:   On variable_declaration_list to state 17
  2:   On variable_declaration to state 4
  3:   On declaration to state 5
  4:   On INTEGER to state 6
  Reduce by 7: optional_variable_declaration_list ->  . 


State 16:
4: procedure_definition -> NAME '(' ')' #0001 '{' optional_variable_declaration_list  . #0002 basic_block_list '}' 
  0:   On #0002 to state 18
  Reduce by 6: #0002 ->  . 


State 17:
8: optional_variable_declaration_list -> variable_declaration_list  . 
10: variable_declaration_list -> variable_declaration_list  . variable_declaration 
  0:   On variable_declaration to state 9
  1:   On declaration to state 5
  2:   On INTEGER to state 6
  Reduce by 8: optional_variable_declaration_list -> variable_declaration_list  . 


State 18:
4: procedure_definition -> NAME '(' ')' #0001 '{' optional_variable_declaration_list #0002  . basic_block_list '}' 
  0:   On basic_block_list to state 19
  1:   On basic_block to state 20
  2:   On BBNUM to state 21


State 19:
4: procedure_definition -> NAME '(' ')' #0001 '{' optional_variable_declaration_list #0002 basic_block_list  . '}' 
13: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 22
  1:   On basic_block to state 23
  2:   On BBNUM to state 21


State 20:
14: basic_block_list -> basic_block  . 
  Reduce by 14: basic_block_list -> basic_block  . 


State 21:
15: basic_block -> BBNUM  . ':' executable_statement_list 
  0:   On ':' to state 24


State 22:
4: procedure_definition -> NAME '(' ')' #0001 '{' optional_variable_declaration_list #0002 basic_block_list '}'  . 
  Reduce by 4: procedure_definition -> NAME '(' ')' #0001 '{' optional_variable_declaration_list #0002 basic_block_list '}'  . 


State 23:
13: basic_block_list -> basic_block_list basic_block  . 
  Reduce by 13: basic_block_list -> basic_block_list basic_block  . 


State 24:
15: basic_block -> BBNUM ':'  . executable_statement_list 
  0:   On executable_statement_list to state 25
  1:   On assignment_statement_list to state 26
  Reduce by 20: assignment_statement_list ->  . 


State 25:
15: basic_block -> BBNUM ':' executable_statement_list  . 
  Reduce by 15: basic_block -> BBNUM ':' executable_statement_list  . 


State 26:
16: executable_statement_list -> assignment_statement_list  . 
17: executable_statement_list -> assignment_statement_list  . RETURN ';' 
18: executable_statement_list -> assignment_statement_list  . goto_statement 
19: executable_statement_list -> assignment_statement_list  . if_else_statement 
21: assignment_statement_list -> assignment_statement_list  . assignment_statement 
  0:   On RETURN to state 27
  1:   On goto_statement to state 28
  2:   On if_else_statement to state 29
  3:   On assignment_statement to state 30
  4:   On GOTO to state 31
  5:   On IF to state 32
  6:   On variable to state 33
  7:   On NAME to state 34
  Reduce by 16: executable_statement_list -> assignment_statement_list  . 


State 27:
17: executable_statement_list -> assignment_statement_list RETURN  . ';' 
  0:   On ';' to state 35


State 28:
18: executable_statement_list -> assignment_statement_list goto_statement  . 
  Reduce by 18: executable_statement_list -> assignment_statement_list goto_statement  . 


State 29:
19: executable_statement_list -> assignment_statement_list if_else_statement  . 
  Reduce by 19: executable_statement_list -> assignment_statement_list if_else_statement  . 


State 30:
21: assignment_statement_list -> assignment_statement_list assignment_statement  . 
  Reduce by 21: assignment_statement_list -> assignment_statement_list assignment_statement  . 


State 31:
33: goto_statement -> GOTO  . BBNUM ';' 
  0:   On BBNUM to state 36


State 32:
32: if_else_statement -> IF  . '(' expression ')' goto_statement ELSE goto_statement 
  0:   On '(' to state 37


State 33:
34: assignment_statement -> variable  . ASSIGN expression ';' 
  0:   On ASSIGN to state 38


State 34:
35: variable -> NAME  . 
  Reduce by 35: variable -> NAME  . 


State 35:
17: executable_statement_list -> assignment_statement_list RETURN ';'  . 
  Reduce by 17: executable_statement_list -> assignment_statement_list RETURN ';'  . 


State 36:
33: goto_statement -> GOTO BBNUM  . ';' 
  0:   On ';' to state 39


State 37:
32: if_else_statement -> IF '('  . expression ')' goto_statement ELSE goto_statement 
  0:   On expression to state 40
  1:   On relational_expression to state 41
  2:   On atomic_expression to state 42
  3:   On variable to state 43
  4:   On constant to state 44
  5:   On NAME to state 34
  6:   On INTEGER_NUMBER to state 45


State 38:
34: assignment_statement -> variable ASSIGN  . expression ';' 
  0:   On expression to state 46
  1:   On relational_expression to state 41
  2:   On atomic_expression to state 42
  3:   On variable to state 43
  4:   On constant to state 44
  5:   On NAME to state 34
  6:   On INTEGER_NUMBER to state 45


State 39:
33: goto_statement -> GOTO BBNUM ';'  . 
  Reduce by 33: goto_statement -> GOTO BBNUM ';'  . 


State 40:
32: if_else_statement -> IF '(' expression  . ')' goto_statement ELSE goto_statement 
  0:   On ')' to state 47


State 41:
31: expression -> relational_expression  . 
25: relational_expression -> relational_expression  . GE relational_expression 
26: relational_expression -> relational_expression  . LE relational_expression 
27: relational_expression -> relational_expression  . LT relational_expression 
28: relational_expression -> relational_expression  . GT relational_expression 
29: relational_expression -> relational_expression  . EQ relational_expression 
30: relational_expression -> relational_expression  . NE relational_expression 
  0:   On GE to state 48
  1:   On LE to state 49
  2:   On LT to state 50
  3:   On GT to state 51
  4:   On EQ to state 52
  5:   On NE to state 53
  Reduce by 31: expression -> relational_expression  . 


State 42:
24: relational_expression -> atomic_expression  . 
  Reduce by 24: relational_expression -> atomic_expression  . 


State 43:
22: atomic_expression -> variable  . 
  Reduce by 22: atomic_expression -> variable  . 


State 44:
23: atomic_expression -> constant  . 
  Reduce by 23: atomic_expression -> constant  . 


State 45:
36: constant -> INTEGER_NUMBER  . 
  Reduce by 36: constant -> INTEGER_NUMBER  . 


State 46:
34: assignment_statement -> variable ASSIGN expression  . ';' 
  0:   On ';' to state 54


State 47:
32: if_else_statement -> IF '(' expression ')'  . goto_statement ELSE goto_statement 
  0:   On goto_statement to state 55
  1:   On GOTO to state 31


State 48:
25: relational_expression -> relational_expression GE  . relational_expression 
  0:   On relational_expression to state 56
  1:   On atomic_expression to state 42
  2:   On variable to state 43
  3:   On constant to state 44
  4:   On NAME to state 34
  5:   On INTEGER_NUMBER to state 45


State 49:
26: relational_expression -> relational_expression LE  . relational_expression 
  0:   On relational_expression to state 57
  1:   On atomic_expression to state 42
  2:   On variable to state 43
  3:   On constant to state 44
  4:   On NAME to state 34
  5:   On INTEGER_NUMBER to state 45


State 50:
27: relational_expression -> relational_expression LT  . relational_expression 
  0:   On relational_expression to state 58
  1:   On atomic_expression to state 42
  2:   On variable to state 43
  3:   On constant to state 44
  4:   On NAME to state 34
  5:   On INTEGER_NUMBER to state 45


State 51:
28: relational_expression -> relational_expression GT  . relational_expression 
  0:   On relational_expression to state 59
  1:   On atomic_expression to state 42
  2:   On variable to state 43
  3:   On constant to state 44
  4:   On NAME to state 34
  5:   On INTEGER_NUMBER to state 45


State 52:
29: relational_expression -> relational_expression EQ  . relational_expression 
  0:   On relational_expression to state 60
  1:   On atomic_expression to state 42
  2:   On variable to state 43
  3:   On constant to state 44
  4:   On NAME to state 34
  5:   On INTEGER_NUMBER to state 45


State 53:
30: relational_expression -> relational_expression NE  . relational_expression 
  0:   On relational_expression to state 61
  1:   On atomic_expression to state 42
  2:   On variable to state 43
  3:   On constant to state 44
  4:   On NAME to state 34
  5:   On INTEGER_NUMBER to state 45


State 54:
34: assignment_statement -> variable ASSIGN expression ';'  . 
  Reduce by 34: assignment_statement -> variable ASSIGN expression ';'  . 


State 55:
32: if_else_statement -> IF '(' expression ')' goto_statement  . ELSE goto_statement 
  0:   On ELSE to state 62


State 56:
25: relational_expression -> relational_expression GE relational_expression  . 
25: relational_expression -> relational_expression  . GE relational_expression 
26: relational_expression -> relational_expression  . LE relational_expression 
27: relational_expression -> relational_expression  . LT relational_expression 
28: relational_expression -> relational_expression  . GT relational_expression 
29: relational_expression -> relational_expression  . EQ relational_expression 
30: relational_expression -> relational_expression  . NE relational_expression 
  0 (removed by precedence):   On GE to state 48
  1 (removed by precedence):   On LE to state 49
  2 (removed by precedence):   On LT to state 50
  3 (removed by precedence):   On GT to state 51
  4 (removed by precedence):   On EQ to state 52
  5 (removed by precedence):   On NE to state 53
  Reduce by 25: relational_expression -> relational_expression GE relational_expression  . 


State 57:
26: relational_expression -> relational_expression LE relational_expression  . 
25: relational_expression -> relational_expression  . GE relational_expression 
26: relational_expression -> relational_expression  . LE relational_expression 
27: relational_expression -> relational_expression  . LT relational_expression 
28: relational_expression -> relational_expression  . GT relational_expression 
29: relational_expression -> relational_expression  . EQ relational_expression 
30: relational_expression -> relational_expression  . NE relational_expression 
  0 (removed by precedence):   On GE to state 48
  1 (removed by precedence):   On LE to state 49
  2 (removed by precedence):   On LT to state 50
  3 (removed by precedence):   On GT to state 51
  4 (removed by precedence):   On EQ to state 52
  5 (removed by precedence):   On NE to state 53
  Reduce by 26: relational_expression -> relational_expression LE relational_expression  . 


State 58:
27: relational_expression -> relational_expression LT relational_expression  . 
25: relational_expression -> relational_expression  . GE relational_expression 
26: relational_expression -> relational_expression  . LE relational_expression 
27: relational_expression -> relational_expression  . LT relational_expression 
28: relational_expression -> relational_expression  . GT relational_expression 
29: relational_expression -> relational_expression  . EQ relational_expression 
30: relational_expression -> relational_expression  . NE relational_expression 
  0 (removed by precedence):   On GE to state 48
  1 (removed by precedence):   On LE to state 49
  2 (removed by precedence):   On LT to state 50
  3 (removed by precedence):   On GT to state 51
  4 (removed by precedence):   On EQ to state 52
  5 (removed by precedence):   On NE to state 53
  Reduce by 27: relational_expression -> relational_expression LT relational_expression  . 


State 59:
28: relational_expression -> relational_expression GT relational_expression  . 
25: relational_expression -> relational_expression  . GE relational_expression 
26: relational_expression -> relational_expression  . LE relational_expression 
27: relational_expression -> relational_expression  . LT relational_expression 
28: relational_expression -> relational_expression  . GT relational_expression 
29: relational_expression -> relational_expression  . EQ relational_expression 
30: relational_expression -> relational_expression  . NE relational_expression 
  0 (removed by precedence):   On GE to state 48
  1 (removed by precedence):   On LE to state 49
  2 (removed by precedence):   On LT to state 50
  3 (removed by precedence):   On GT to state 51
  4 (removed by precedence):   On EQ to state 52
  5 (removed by precedence):   On NE to state 53
  Reduce by 28: relational_expression -> relational_expression GT relational_expression  . 


State 60:
29: relational_expression -> relational_expression EQ relational_expression  . 
25: relational_expression -> relational_expression  . GE relational_expression 
26: relational_expression -> relational_expression  . LE relational_expression 
27: relational_expression -> relational_expression  . LT relational_expression 
28: relational_expression -> relational_expression  . GT relational_expression 
29: relational_expression -> relational_expression  . EQ relational_expression 
30: relational_expression -> relational_expression  . NE relational_expression 
  0:   On GE to state 48
  1:   On LE to state 49
  2:   On LT to state 50
  3:   On GT to state 51
  4 (removed by precedence):   On EQ to state 52
  5 (removed by precedence):   On NE to state 53
  Reduce by 29: relational_expression -> relational_expression EQ relational_expression  . 


State 61:
30: relational_expression -> relational_expression NE relational_expression  . 
25: relational_expression -> relational_expression  . GE relational_expression 
26: relational_expression -> relational_expression  . LE relational_expression 
27: relational_expression -> relational_expression  . LT relational_expression 
28: relational_expression -> relational_expression  . GT relational_expression 
29: relational_expression -> relational_expression  . EQ relational_expression 
30: relational_expression -> relational_expression  . NE relational_expression 
  0:   On GE to state 48
  1:   On LE to state 49
  2:   On LT to state 50
  3:   On GT to state 51
  4 (removed by precedence):   On EQ to state 52
  5 (removed by precedence):   On NE to state 53
  Reduce by 30: relational_expression -> relational_expression NE relational_expression  . 


State 62:
32: if_else_statement -> IF '(' expression ')' goto_statement ELSE  . goto_statement 
  0:   On goto_statement to state 63
  1:   On GOTO to state 31


State 63:
32: if_else_statement -> IF '(' expression ')' goto_statement ELSE goto_statement  . 
  Reduce by 32: if_else_statement -> IF '(' expression ')' goto_statement ELSE goto_statement  . 



