
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  declaration_statement_list procedure_name procedure_body
2: program ->  procedure_name procedure_body
3: procedure_name (NAME) ->  NAME '(' ')'
4: procedure_body ('{') ->  '{' declaration_statement_list basic_block_list '}'
5: procedure_body ('{') ->  '{' basic_block_list '}'
6: declaration_statement_list ->  declaration_statement
7: declaration_statement_list ->  declaration_statement_list declaration_statement
8: declaration_statement (INTEGER) ->  INTEGER NAME ';'
9: basic_block_list ->  basic_block_list basic_block
10: basic_block_list ->  basic_block
11: basic_block ('<') ->  '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list
12: executable_statement_list ->  assignment_statement_list
13: executable_statement_list (RETURN) ->  assignment_statement_list RETURN ';'
14: executable_statement_list ->  assignment_statement_list goto_statement
15: executable_statement_list ->  assignment_statement_list if_else_statement
16: assignment_statement_list ->  <empty>
17: assignment_statement_list ->  assignment_statement_list assignment_statement
18: if_else_statement (IF) ->  IF '(' expression ')' goto_statement ELSE goto_statement
19: goto_statement (GOTO) ->  GOTO '<' NAME INTEGER_NUMBER '>' ';'
20: relational_op ('<') ->  '<'
21: relational_op ('>') ->  '>'
22: relational_op ('<') ->  '<' '='
23: relational_op ('>') ->  '>' '='
24: relational_op ('=') ->  '=' '='
25: relational_op ('!') ->  '!' '='
26: expression ->  expression relational_op expression
27: expression ->  variable
28: expression ->  constant
29: assignment_statement ('=') ->  variable '=' variable ';'
30: assignment_statement ('=') ->  variable '=' constant ';'
31: variable (NAME) ->  NAME
32: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
33: program_$ ->  program


Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: NAME
   259: RETURN
   260: INTEGER
   261: IF
   262: ELSE
   263: GOTO
    40: '('
    41: ')'
   123: '{'
   125: '}'
    59: ';'
    60: '<'
    62: '>'
    58: ':'
    61: '='
    33: '!'


Grammar States: 
State 0:
33: program_$ ->  . program 
  0:   On program to state 1
  1:   On declaration_statement_list to state 2
  2:   On procedure_name to state 3
  3:   On declaration_statement to state 4
  4:   On NAME to state 5
  5:   On INTEGER to state 6


State 1:
33: program_$ -> program  . 


State 2:
1: program -> declaration_statement_list  . procedure_name procedure_body 
7: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On procedure_name to state 7
  1:   On declaration_statement to state 8
  2:   On NAME to state 5
  3:   On INTEGER to state 6


State 3:
2: program -> procedure_name  . procedure_body 
  0:   On procedure_body to state 9
  1:   On '{' to state 10


State 4:
6: declaration_statement_list -> declaration_statement  . 
  Reduce by 6: declaration_statement_list -> declaration_statement  . 


State 5:
3: procedure_name -> NAME  . '(' ')' 
  0:   On '(' to state 11


State 6:
8: declaration_statement -> INTEGER  . NAME ';' 
  0:   On NAME to state 12


State 7:
1: program -> declaration_statement_list procedure_name  . procedure_body 
  0:   On procedure_body to state 13
  1:   On '{' to state 10


State 8:
7: declaration_statement_list -> declaration_statement_list declaration_statement  . 
  Reduce by 7: declaration_statement_list -> declaration_statement_list declaration_statement  . 


State 9:
2: program -> procedure_name procedure_body  . 
  Reduce by 2: program -> procedure_name procedure_body  . 


State 10:
4: procedure_body -> '{'  . declaration_statement_list basic_block_list '}' 
5: procedure_body -> '{'  . basic_block_list '}' 
  0:   On declaration_statement_list to state 14
  1:   On basic_block_list to state 15
  2:   On declaration_statement to state 4
  3:   On basic_block to state 16
  4:   On INTEGER to state 6
  5:   On '<' to state 17


State 11:
3: procedure_name -> NAME '('  . ')' 
  0:   On ')' to state 18


State 12:
8: declaration_statement -> INTEGER NAME  . ';' 
  0:   On ';' to state 19


State 13:
1: program -> declaration_statement_list procedure_name procedure_body  . 
  Reduce by 1: program -> declaration_statement_list procedure_name procedure_body  . 


State 14:
4: procedure_body -> '{' declaration_statement_list  . basic_block_list '}' 
7: declaration_statement_list -> declaration_statement_list  . declaration_statement 
  0:   On basic_block_list to state 20
  1:   On declaration_statement to state 8
  2:   On basic_block to state 16
  3:   On INTEGER to state 6
  4:   On '<' to state 17


State 15:
5: procedure_body -> '{' basic_block_list  . '}' 
9: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 21
  1:   On basic_block to state 22
  2:   On '<' to state 17


State 16:
10: basic_block_list -> basic_block  . 
  Reduce by 10: basic_block_list -> basic_block  . 


State 17:
11: basic_block -> '<'  . NAME INTEGER_NUMBER '>' ':' executable_statement_list 
  0:   On NAME to state 23


State 18:
3: procedure_name -> NAME '(' ')'  . 
  Reduce by 3: procedure_name -> NAME '(' ')'  . 


State 19:
8: declaration_statement -> INTEGER NAME ';'  . 
  Reduce by 8: declaration_statement -> INTEGER NAME ';'  . 


State 20:
4: procedure_body -> '{' declaration_statement_list basic_block_list  . '}' 
9: basic_block_list -> basic_block_list  . basic_block 
  0:   On '}' to state 24
  1:   On basic_block to state 22
  2:   On '<' to state 17


State 21:
5: procedure_body -> '{' basic_block_list '}'  . 
  Reduce by 5: procedure_body -> '{' basic_block_list '}'  . 


State 22:
9: basic_block_list -> basic_block_list basic_block  . 
  Reduce by 9: basic_block_list -> basic_block_list basic_block  . 


State 23:
11: basic_block -> '<' NAME  . INTEGER_NUMBER '>' ':' executable_statement_list 
  0:   On INTEGER_NUMBER to state 25


State 24:
4: procedure_body -> '{' declaration_statement_list basic_block_list '}'  . 
  Reduce by 4: procedure_body -> '{' declaration_statement_list basic_block_list '}'  . 


State 25:
11: basic_block -> '<' NAME INTEGER_NUMBER  . '>' ':' executable_statement_list 
  0:   On '>' to state 26


State 26:
11: basic_block -> '<' NAME INTEGER_NUMBER '>'  . ':' executable_statement_list 
  0:   On ':' to state 27


State 27:
11: basic_block -> '<' NAME INTEGER_NUMBER '>' ':'  . executable_statement_list 
  0:   On executable_statement_list to state 28
  1:   On assignment_statement_list to state 29
  Reduce by 16: assignment_statement_list ->  . 


State 28:
11: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list  . 
  Reduce by 11: basic_block -> '<' NAME INTEGER_NUMBER '>' ':' executable_statement_list  . 


State 29:
12: executable_statement_list -> assignment_statement_list  . 
13: executable_statement_list -> assignment_statement_list  . RETURN ';' 
14: executable_statement_list -> assignment_statement_list  . goto_statement 
15: executable_statement_list -> assignment_statement_list  . if_else_statement 
17: assignment_statement_list -> assignment_statement_list  . assignment_statement 
  0:   On RETURN to state 30
  1:   On goto_statement to state 31
  2:   On if_else_statement to state 32
  3:   On assignment_statement to state 33
  4:   On GOTO to state 34
  5:   On IF to state 35
  6:   On variable to state 36
  7:   On NAME to state 37
  Reduce by 12: executable_statement_list -> assignment_statement_list  . 


State 30:
13: executable_statement_list -> assignment_statement_list RETURN  . ';' 
  0:   On ';' to state 38


State 31:
14: executable_statement_list -> assignment_statement_list goto_statement  . 
  Reduce by 14: executable_statement_list -> assignment_statement_list goto_statement  . 


State 32:
15: executable_statement_list -> assignment_statement_list if_else_statement  . 
  Reduce by 15: executable_statement_list -> assignment_statement_list if_else_statement  . 


State 33:
17: assignment_statement_list -> assignment_statement_list assignment_statement  . 
  Reduce by 17: assignment_statement_list -> assignment_statement_list assignment_statement  . 


State 34:
19: goto_statement -> GOTO  . '<' NAME INTEGER_NUMBER '>' ';' 
  0:   On '<' to state 39


State 35:
18: if_else_statement -> IF  . '(' expression ')' goto_statement ELSE goto_statement 
  0:   On '(' to state 40


State 36:
29: assignment_statement -> variable  . '=' variable ';' 
30: assignment_statement -> variable  . '=' constant ';' 
  0:   On '=' to state 41


State 37:
31: variable -> NAME  . 
  Reduce by 31: variable -> NAME  . 


State 38:
13: executable_statement_list -> assignment_statement_list RETURN ';'  . 
  Reduce by 13: executable_statement_list -> assignment_statement_list RETURN ';'  . 


State 39:
19: goto_statement -> GOTO '<'  . NAME INTEGER_NUMBER '>' ';' 
  0:   On NAME to state 42


State 40:
18: if_else_statement -> IF '('  . expression ')' goto_statement ELSE goto_statement 
  0:   On expression to state 43
  1:   On variable to state 44
  2:   On constant to state 45
  3:   On NAME to state 37
  4:   On INTEGER_NUMBER to state 46


State 41:
29: assignment_statement -> variable '='  . variable ';' 
30: assignment_statement -> variable '='  . constant ';' 
  0:   On variable to state 47
  1:   On constant to state 48
  2:   On NAME to state 37
  3:   On INTEGER_NUMBER to state 46


State 42:
19: goto_statement -> GOTO '<' NAME  . INTEGER_NUMBER '>' ';' 
  0:   On INTEGER_NUMBER to state 49


State 43:
18: if_else_statement -> IF '(' expression  . ')' goto_statement ELSE goto_statement 
26: expression -> expression  . relational_op expression 
  0:   On ')' to state 50
  1:   On relational_op to state 51
  2:   On '<' to state 52
  3:   On '>' to state 53
  4:   On '=' to state 54
  5:   On '!' to state 55


State 44:
27: expression -> variable  . 
  Reduce by 27: expression -> variable  . 


State 45:
28: expression -> constant  . 
  Reduce by 28: expression -> constant  . 


State 46:
32: constant -> INTEGER_NUMBER  . 
  Reduce by 32: constant -> INTEGER_NUMBER  . 


State 47:
29: assignment_statement -> variable '=' variable  . ';' 
  0:   On ';' to state 56


State 48:
30: assignment_statement -> variable '=' constant  . ';' 
  0:   On ';' to state 57


State 49:
19: goto_statement -> GOTO '<' NAME INTEGER_NUMBER  . '>' ';' 
  0:   On '>' to state 58


State 50:
18: if_else_statement -> IF '(' expression ')'  . goto_statement ELSE goto_statement 
  0:   On goto_statement to state 59
  1:   On GOTO to state 34


State 51:
26: expression -> expression relational_op  . expression 
  0:   On expression to state 60
  1:   On variable to state 44
  2:   On constant to state 45
  3:   On NAME to state 37
  4:   On INTEGER_NUMBER to state 46


State 52:
20: relational_op -> '<'  . 
22: relational_op -> '<'  . '=' 
  0:   On '=' to state 61
  Reduce by 20: relational_op -> '<'  . 


State 53:
21: relational_op -> '>'  . 
23: relational_op -> '>'  . '=' 
  0:   On '=' to state 62
  Reduce by 21: relational_op -> '>'  . 


State 54:
24: relational_op -> '='  . '=' 
  0:   On '=' to state 63


State 55:
25: relational_op -> '!'  . '=' 
  0:   On '=' to state 64


State 56:
29: assignment_statement -> variable '=' variable ';'  . 
  Reduce by 29: assignment_statement -> variable '=' variable ';'  . 


State 57:
30: assignment_statement -> variable '=' constant ';'  . 
  Reduce by 30: assignment_statement -> variable '=' constant ';'  . 


State 58:
19: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>'  . ';' 
  0:   On ';' to state 65


State 59:
18: if_else_statement -> IF '(' expression ')' goto_statement  . ELSE goto_statement 
  0:   On ELSE to state 66


State 60:
26: expression -> expression relational_op expression  . 
26: expression -> expression  . relational_op expression 
  0:   On relational_op to state 51
  1 (AUTO REMOVED by S/R resolution):   On '<' to state 52
  2 (AUTO REMOVED by S/R resolution):   On '>' to state 53
  3 (AUTO REMOVED by S/R resolution):   On '=' to state 54
  4 (AUTO REMOVED by S/R resolution):   On '!' to state 55
  Reduce by 26: expression -> expression relational_op expression  . 


State 61:
22: relational_op -> '<' '='  . 
  Reduce by 22: relational_op -> '<' '='  . 


State 62:
23: relational_op -> '>' '='  . 
  Reduce by 23: relational_op -> '>' '='  . 


State 63:
24: relational_op -> '=' '='  . 
  Reduce by 24: relational_op -> '=' '='  . 


State 64:
25: relational_op -> '!' '='  . 
  Reduce by 25: relational_op -> '!' '='  . 


State 65:
19: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>' ';'  . 
  Reduce by 19: goto_statement -> GOTO '<' NAME INTEGER_NUMBER '>' ';'  . 


State 66:
18: if_else_statement -> IF '(' expression ')' goto_statement ELSE  . goto_statement 
  0:   On goto_statement to state 67
  1:   On GOTO to state 34


State 67:
18: if_else_statement -> IF '(' expression ')' goto_statement ELSE goto_statement  . 
  Reduce by 18: if_else_statement -> IF '(' expression ')' goto_statement ELSE goto_statement  . 



